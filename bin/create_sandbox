#!/bin/bash

if [ -z "$SANDBOX" ]
then
    echo "missing \$SANDBOX environment variable"
    exit 1
fi

PATH="/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
vm_cmd='VBoxManage -q'

# parse switch arguments
while getopts 'h' argv
do
    case "$argv" in 
        h)
            echo "usage: $0 base_sandbox new_sandbox"
            exit 0
            ;;
    esac
done

# parse the rest
shift $((OPTIND - 1))
src_vm="$1"
dst_vm="$2"

# make sure the src exists
if $vm_cmd showvminfo "$src_vm" | grep 'Could not find a registered machine' &> /dev/null
then
    echo "source vm $src_vm does not exist"
    exit 0
fi

# make sure the dst does not exist
if ! ($vm_cmd showvminfo "$dst_vm" 2>&1 | grep 'Could not find a registered machine' &> /dev/null)
then
    echo "dst vm $dst_vm already exists"
    exit 0
fi

# clone the virtual machine
$vm_cmd clonevm "$src_vm" --snapshot ready --mode machine --options link,keepdisknames --name "$dst_vm" --register

# delete previous trace files
if [ -e "$SANDBOX/traces/$dst_vm.pcap" ]
then
    echo "deleting old trace file $SANDBOX/traces/$dst_vm.pcap"
    rm "$SANDBOX/traces/$dst_vm.pcap"
fi

$vm_cmd modifyvm "$dst_vm" --memory 1024 --boot1 dvd --boot2 disk --nic1 bridged --bridgeadapter1 malware0 --nictrace1 on --nictracefile1 "$SANDBOX/traces/$dst_vm.pcap"

# reset the shared folder
mkdir -p "$SANDBOX/shared/$dst_vm"
$vm_cmd sharedfolder remove "$dst_vm" --name shared
$vm_cmd sharedfolder add "$dst_vm" --name shared --hostpath "$SANDBOX/shared/$dst_vm"
